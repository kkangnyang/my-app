// useCallback : 함수를 반환. 컴포넌트가 렌더링 될 때마다 매번 함수를 새로 정의하는 것이 아니라 의존성 배열의 값이 바뀐 경우에만 함수를 새로 정의해서 리턴
/* useCallback() 사용법
   const memoizedCallback = useCallback(
        () => {
            doSomething(의존성 변수1, 의존성 변수2);
        }, [의존성 변수1, 의존성 변수2]
    );

    의존성 배열에 있는 변수 중 하나라도 변경되면 메모이제이션된 콜백 함수를 반환


    // 동의한 열할을 하는 두 줄의 코드
    useCallback(함수, 의존성 배열);
    useMemo(() => 함수, 의존성 배열);

    useCallback Hook을 사용하지 않고 컴포넌트 내에 함수를 정의한다면
    매번 렌더링이 일어날 때마다 함수가 새로 정의 됨
    => useCallback Hook을 사용하여 특정 변수의 값이 변한 경우에만 함수를 다시 정의하도록 해서
    불필요한 반복 작업을 삭제
*/
